[tool.poetry]
name = "s3-eventbridge-sqs-lambda"
version = "0.1.0"
description = "Example application for testing S3 events being staggered to trigger Lambda at least once"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
boto3 = "^1.34.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pre-commit = "^3.5.0"
pytest-mock = "^3.12.0"
moto = "^4.2.9"
bandit = "^1.8.3"
matplotlib = "^3.10.1"
pandas = "^2.2.3"
numpy = "^2.2.3"

[tool.poetry.group.lint.dependencies]
ruff = "^0.1.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py312"
# E: pycodestyle errors
# F: Pyflakes
# I: isort
# W: pycodestyle warnings
# B: flake8-bugbear
# C4: flake8-comprehensions
# UP: pyupgrade
# S: flake8-bandit (security)
# N: pep8-naming
# ANN: flake8-annotations
# D: pydocstyle
# PT: flake8-pytest-style
# RUF: Ruff-specific rules
select = ["E", "F", "I", "W", "B", "C4", "UP", "S", "N", "ANN", "D", "PT", "RUF"]
ignore = [
    "W293",  # blank line contains whitespace
    "E501",  # line too long
    "F401",  # imported but unused
    "W292",  # no newline at end of file
    "ANN101", # Missing type annotation for self
    "ANN102", # Missing type annotation for cls
    "D203",   # one-blank-line-before-class (conflicts with D211)
    "D213",   # multi-line-summary-second-line (conflicts with D212)
]

[tool.ruff.isort]
known-first-party = ["simulate_uploads", "process_object", "monitor_processing", "performance_test"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query", "fastapi.Path", "fastapi.Body"]

[tool.ruff.per-file-ignores]
"**/tests/**/*.py" = ["S101", "ANN201", "D103"]
"**/conftest.py" = ["ANN201", "D103"]

[tool.bandit]
exclude_dirs = ["tests", "test", "*_test.py"]
skips = ["B101", "B104", "B311", "B108"]

[tool.pytest.ini_options]
testpaths = ["src/python/tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "-v --no-header"
